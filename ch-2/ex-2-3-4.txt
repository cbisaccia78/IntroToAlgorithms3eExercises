We can express insertion sort as a recursive procedure as follows. 
In order to sort A[1::n], we recursively sort A[1::n-1] and then insert A[n] into the sorted array A[1::n-1]. 

Write a recurrence for the running time of this recursive version of insertion sort.

SOLUTION:

Reminder:

T(n) = aT(n/b) + D(n) + C(n), where
    a = number of subproblems at the split
    1/b = fraction of the size of the original problem
    D(n) = time to divide the problem into subproblems
    C(n) = time to combine the subproblems

So for insertion sort, 

a = 1
1/b = (n-1) / n
D(n) = O(1)
C(n) = O(n)

Thus,

T(n) = O(1) if n == 1
T(n) = T(n-1) + O(n) if n > 1